{"ast":null,"code":"var _jsxFileName = \"C:\\\\Workspaces\\\\Java\\\\CSGTest\\\\counterfront\\\\counterapp-front\\\\src\\\\App.js\";\nimport './App.css';\n\n//kelas 1 perkenalan JSX\n// function App() {\n//   const name = \"RAMA\";\n//   const email = \"adit@ramp.com\";\n\n//   const hname = <h1> {name}</h1>;\n//   const hemail = <h2> {email}</h2>;\n\n//   const user = (\n//     <div>\n//       {hname}\n//       {hemail}\n//     </div>\n//   );\n//   return (\n//     <div className=\"App\">\n//       {user}\n//       {user}\n//       {user}\n//     </div>\n//   );\n// }\n\n// class 1\n// function App() {\n\n//   return (\n//     <div className=\"App\">\n//       <User name=\"Name to props \" email=\"email to props\"/>\n//     </div>\n//   );\n// }\n\n// //Kalo returnnya variable, ini namanya function javascritp doang\n// const GetName = () => {\n//   return \"NAMA RAMA\";\n// }\n\n// //component tuh return baluenya HTML. jadi buat bikin component untuk UInya\n// const GetNameComponent = () => {\n//   return <h1>NAMA RAMA COMPONENT</h1>\n// }\n\n// //component with props\n// //props tuh mirip sama param tp ga stateful. isinya bisa apa aja.\n// //buat masukin props, masukin param di yg panggil component\n// const User = (props) => {\n//   const name = \"RAMA\";\n//   const email = \"adit@ramp.com\";\n\n//   const hname = <h1> name</h1>;\n//   const hemail = <h2> email</h2>;\n\n//   const user = (\n//     <div>\n//       {hname}\n//       {hemail}\n//     </div>\n//   );\n//   return (\n//     //kalo pake panggil variable biasa\n//   //   <div>\n//   //   {hname}\n//   //   {hemail}\n//   // </div>\n\n//   //kalo pake props\n//     <div>\n//       <h1>{props.name}</h1>\n//       <h2>{props.email}</h2>\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(User, {\n      name: \"Name to props \",\n      email: \"email to props\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","App","className","children","User","name","email","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Workspaces/Java/CSGTest/counterfront/counterapp-front/src/App.js"],"sourcesContent":["import './App.css';\n\n//kelas 1 perkenalan JSX\n// function App() {\n//   const name = \"RAMA\";\n//   const email = \"adit@ramp.com\";\n\n//   const hname = <h1> {name}</h1>;\n//   const hemail = <h2> {email}</h2>;\n\n//   const user = (\n//     <div>\n//       {hname}\n//       {hemail}\n//     </div>\n//   );\n//   return (\n//     <div className=\"App\">\n//       {user}\n//       {user}\n//       {user}\n//     </div>\n//   );\n// }\n\n// class 1\n// function App() {\n\n//   return (\n//     <div className=\"App\">\n//       <User name=\"Name to props \" email=\"email to props\"/>\n//     </div>\n//   );\n// }\n\n// //Kalo returnnya variable, ini namanya function javascritp doang\n// const GetName = () => {\n//   return \"NAMA RAMA\";\n// }\n\n// //component tuh return baluenya HTML. jadi buat bikin component untuk UInya\n// const GetNameComponent = () => {\n//   return <h1>NAMA RAMA COMPONENT</h1>\n// }\n\n// //component with props\n// //props tuh mirip sama param tp ga stateful. isinya bisa apa aja.\n// //buat masukin props, masukin param di yg panggil component\n// const User = (props) => {\n//   const name = \"RAMA\";\n//   const email = \"adit@ramp.com\";\n\n//   const hname = <h1> name</h1>;\n//   const hemail = <h2> email</h2>;\n\n//   const user = (\n//     <div>\n//       {hname}\n//       {hemail}\n//     </div>\n//   );\n//   return (\n//     //kalo pake panggil variable biasa\n//   //   <div>\n//   //   {hname}\n//   //   {hemail}\n//   // </div>\n\n//   //kalo pake props\n//     <div>\n//       <h1>{props.name}</h1>\n//       <h2>{props.email}</h2>\n//     </div>\n//   );\n// }\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <User name=\"Name to props \" email=\"email to props\"/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;;AAElB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAA,MAAA,IAAAC,OAAA;AAIA,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA,CAACI,IAAI;MAACC,IAAI,EAAC,gBAAgB;MAACC,KAAK,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV;AAACC,EAAA,GANQV,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}